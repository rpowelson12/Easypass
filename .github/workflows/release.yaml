name: Build and Release

on:
  push:
    tags:
      - "v*" # version tags

env:
  BINARY_BASE_NAME: easypass
  VERSION: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BINARY_BASE_NAME: easypass
      VERSION: ${{ github.ref_name }}
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build Easypass
        run: |
          echo "Building version $VERSION for ${{ matrix.os }}/ ${{ matrix.arch }}"
          BINARY_NAME="${{ env.BINARY_BASE_NAME }}_${{ matrix.os }}_${{ matrix.arch }}"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build \
            -ldflags "-X github.com/rpowelson12/Easypass/internal/version.Version=${VERSION}" \
            -o "$BINARY_NAME" ./
          tar -czvf "${BINARY_NAME}.tar.gz" --transform "s|${BINARY_NAME}|easypass|" "$BINARY_NAME"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_BASE_NAME }}_${{ matrix.os }}_${{ matrix.arch }}
          path: |
            ${{ env.BINARY_BASE_NAME }}_${{ matrix.os }}_${{ matrix.arch }}
            ${{ env.BINARY_BASE_NAME }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Easypass ${{ env.VERSION }}
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
